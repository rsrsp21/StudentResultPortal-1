
    var grades = {
      'A+': 10,
      'A': 9,
      'B': 8,
      'C': 7,
      'D': 6,
      'E': 5,
      'F': 'Fail',
      'COMPLE': 0,
	'ABSENT': 'Fail',
  'NOT CO': 0
    };

    function parseCSV(csv) {
      var lines = csv.split('\n');
      var headers = lines[0].split(',');

      var data = [];
      for (var i = 1; i < lines.length; i++) {
        var values = lines[i].split(',');
        if (values.length === headers.length) {
          var entry = {};
          for (var j = 0; j < headers.length; j++) {
            entry[headers[j].trim()] = values[j].trim();
          }
          data.push(entry);
        }
      }

      return data;
    }

    function getStudentData(id, data) {
      var studentData = data.filter(function(entry) {
        return entry.ID === id;
      });

      return studentData;
    }

    function calculateSGPA(studentData) {
      var totalCredits = 0;
      var totalGradePoints = 0;

      for (var i = 0; i < studentData.length; i++) {
        var subject = studentData[i];
        var grade = grades[subject.Grade];
        var credits = parseFloat(subject.Credits);

        if (grade === 'Fail') {
          return 'Fail';
        }

        totalCredits += credits;
        totalGradePoints += grade * credits;
      }

      var sgpa = (totalGradePoints / totalCredits).toFixed(2);

      return sgpa;
    }
var clearedSupplementaryIDs = [
'21031A0101','21031A0102','21031A0105','21031A0106','21031A0107','21031A0108','21031A0110','21031A0111','21031A0112','21031A0113','21031A0115','21031A0116','21031A0117','21031A0118','21031A0119','21031A0120','21031A0122','21031A0123','21031A0125','21031A0127','21031A0128','21031A0130','21031A0131','21031A0133','21031A0134','21031A0135','21031A0136','21031A0138','21031A0139','21031A0202','21031A0204','21031A0209','21031A0210','21031A0215','21031A0216','21031A0217','21031A0218','21031A0220','21031A0221','21031A0223','21031A0226','21031A0228','21031A0229','21031A0231','21031A0235','21031A0236','21031A0237','21031A0238','21031A0301','21031A0302','21031A0305','21031A0306','21031A0307','21031A0308','21031A0309','21031A0311','21031A0312','21031A0313','21031A0314','21031A0315','21031A0316','21031A0317','21031A0318','21031A0319','21031A0320','21031A0321','21031A0324','21031A0325','21031A0326','21031A0330','21031A0401','21031A0402','21031A0403','21031A0405','21031A0406','21031A0408','21031A0409','21031A0412','21031A0413','21031A0415','21031A0417','21031A0418','21031A0419','21031A0422','21031A0428','21031A0429','21031A0431','21031A0432','21031A0433','21031A0437','21031A0438','21031A0439','21031A0440','21031A0442','21031A0443','21031A0448','21031A0449','21031A0451','21031A0452','21031A0453','21031A0455','21031A0456','21031A0457','21031A0458','21031A0459','21031A0460','21031A0461','21031A0501','21031A0504','21031A0505','21031A0510','21031A0511','21031A0525','21031A0526','21031A0527','21031A0528','21031A0539','21031A0542','21031A0543','21031A0545','21031A0547','21031A0550','21031A0555','21031A0556','21031A0558','21031A0559','21031A0560','21031A0562'
]

function displayResults() {
var studentId = document.getElementById('student-id').value.trim();
  if (!studentId) {
    alert('Please enter a valid Roll Number');
    return;
  }

  var studentData = getStudentData(studentId, parseCSV(csvData));
  if (studentData.length === 0) {
    alert('No data found for the given Roll Number.');
    return;
  }

 var idContainer = document.getElementById('id-container');
  var idHeading = idContainer.querySelector('p');
  idHeading.textContent = 'Roll Number: ';
 idHeading.style.color = 'black';
  idHeading.style.fontWeight = 'bold';
  idContainer.style.marginTop = '20px';

  var idValue = document.createElement('span');
  idValue.textContent = studentId;
  idValue.style.color = 'red';
  idValue.style.fontWeight = 'bold';
  idHeading.appendChild(idValue);

  var resultsContainer = document.getElementById('results-container');
  resultsContainer.innerHTML = '';

  var table = document.createElement('table');
  var tableHeader = document.createElement('thead');
  var tableBody = document.createElement('tbody');

  var headers = Object.keys(studentData[0]);
  var headerRow = document.createElement('tr');
  headers.forEach(function(header) {
    if (header !== 'ID') {
      var th = document.createElement('th');
      th.textContent = header;
      headerRow.appendChild(th);
    }
  });
  tableHeader.appendChild(headerRow);

  studentData.forEach(function(subject) {
    var row = document.createElement('tr');
    Object.entries(subject).forEach(function([key, value]) {
      if (key !== 'ID') {
        var td = document.createElement('td');
        td.textContent = value;
        row.appendChild(td);
      }
    });
    tableBody.appendChild(row);
  });

  table.appendChild(tableHeader);
  table.appendChild(tableBody);
  resultsContainer.appendChild(table);
	
  var sgpaContainer = document.getElementById('sgpa-container');
  sgpaContainer.innerHTML = '';

  // Create a container for the Total Credits
  var totalCreditsContainer = document.createElement('div');
  totalCreditsContainer.className = 'total-credits';

  var sgpaResult = document.createElement('h3');
  var sgpa = calculateSGPA(studentData);
  sgpaResult.innerHTML = '<span style="color: black;">SGPA : </span><span style="color: red;">' + sgpa + '</span>';

  var supplementaryResult = document.createElement('p');
  supplementaryResult.className = 'supplementary-message';
  if (sgpa === 'Fail') {
    supplementaryResult.innerHTML = '<span style="color: blue;">Better luck next time!</span>';
  } else if (clearedSupplementaryIDs.includes(studentId)) {
    supplementaryResult.innerHTML = '<span style="color: blue;">Passed. Cleared in supplementary appearance(s).</span>';
  } else {
    supplementaryResult.innerHTML = '<span style="color: green;">Congratulations! You have passed!</span>';
  }

  // Append SGPA and Supplementary Results to the SGPA Container
  sgpaContainer.appendChild(sgpaResult);
  sgpaContainer.appendChild(supplementaryResult);

  // Calculate and display Total Credits Obtained
  var totalCreditsText = document.createElement('h6');
  totalCreditsText.innerHTML = '<span style="color: black; font-weight: bold;">Total Credits Obtained: </span><span style="color: red; font-weight: bold;">' + calculateTotalCredits(studentData) + ' / 19.5</span>';
  totalCreditsContainer.appendChild(totalCreditsText);

  // Append the Total Credits Container to the SGPA Container
  sgpaContainer.appendChild(totalCreditsContainer);

  document.getElementById('student-id').focus();

	// // Load the existing list of searched roll numbers from local storage
  // var savedRollNumbers = localStorage.getItem("savedRollNumbers");
  // savedRollNumbers = savedRollNumbers ? JSON.parse(savedRollNumbers) : [];

  // // Check if the current roll number is already in the list
  // if (!savedRollNumbers.includes(studentId)) {
  //   // Add the current roll number to the list
  //   savedRollNumbers.push(studentId);

  //   // Save the updated list back to local storage
  //   localStorage.setItem("savedRollNumbers", JSON.stringify(savedRollNumbers));
  // }
}

function calculateTotalCredits(studentData) {
  var totalCredits = 0;

  for (var i = 0; i < studentData.length; i++) {
    var credits = parseFloat(studentData[i].Credits);
    totalCredits += credits;
  }

  return totalCredits.toFixed(1);
}

 function handleKeyPress(event) {
      	if (event.keyCode === 13) { // 13 represents the Enter key
        	displayResults();
      	}
    	}

    	// Add event listener to input element
    	document.getElementById('student-id').addEventListener('keyup', handleKeyPress);

function printResults() {
  var printContents = document.querySelector('.container').innerHTML;
  var originalContents = document.body.innerHTML;

  document.body.innerHTML = printContents;
  window.print();

  document.body.innerHTML = originalContents;
}
window.onload = function() {
  var savedRollNumbers = localStorage.getItem("savedRollNumbers");
  savedRollNumbers = savedRollNumbers ? JSON.parse(savedRollNumbers) : [];

  var rollNoInput = document.getElementById("student-id");
  rollNoInput.addEventListener('focus', function() {
    rollNoInput.setAttribute('list', 'rollNumberSuggestions');
  });

  var datalist = document.getElementById('rollNumberSuggestions');

  savedRollNumbers.forEach(function(rollNo) {
    var option = document.createElement('option');
    option.value = rollNo;
    datalist.appendChild(option);
  });
};